<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ds.mapper.StudentMapper">

	<resultMap type="com.ds.domain.LectureVO" id="lectureMap">
		<id property="lecture_no" column="lecture_no" />
		<result property="lecture_name" column="lecture_name" />
		<result property="lecture_description"
			column="lecture_description" />
		<result property="lecture_afreecaid" column="lecture_afreecaid" />
		<result property="regdate" column="regdate" />
		<collection property="classList" resultMap="classMap">
		</collection>
	</resultMap>

	<resultMap type="com.ds.domain.ClassListVO" id="classMap">
		<result property="lecture_no" column="lecture_no" />
		<result property="user_no" column="user_no" />
		<result property="class_status" column="class_status" />
	</resultMap>

	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type=='N'.toString()">
							lecture_name like '%'||#{keyword}||'%'
						</when>
						<when test="type=='T'.toString()">
							lecture_afreecaid like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<select id="lectureConfirmList"	resultType="com.ds.domain.LectureVO">
		select l.lecture_no, l.lecture_name, u.user_name from 
		(select l2.lecture_no, l2.lecture_name, c2.user_no 
		from ds_lecture l2, ds_class_list c2 
		where l2.lecture_no=c2.lecture_no 
		and user_no=#{user_no} and c2.class_status='true') l , 
		ds_class_list c, ds_auth a, ds_user u 
		where l.lecture_no=c.lecture_no and
		c.user_no=a.user_no and a.user_auth='ROLE_TEACHER' and a.user_no=u.user_no
		order by lecture_no
	</select>

	<select id="lectureList" resultType="com.ds.domain.LectureVO">
		select l.lecture_no, l.lecture_name, u.user_name from 
		(select l2.lecture_no, l2.lecture_name, c2.user_no 
		from ds_lecture l2, ds_class_list c2 
		where l2.lecture_no=c2.lecture_no 
		and user_no=#{user_no} and c2.class_status='false') l , 
		ds_class_list c, ds_auth a, ds_user u 
		where l.lecture_no=c.lecture_no and
		c.user_no=a.user_no and a.user_auth='ROLE_TEACHER' and a.user_no=u.user_no
		order by lecture_no
	</select>

	<select id="lectureAllList" resultType="com.ds.domain.LectureVO">
		<![CDATA[
		select l.lecture_no, l.lecture_name, u.user_name from 
		(select rownum rn, lecture_no, lecture_name, lecture_afreecaid from ds_lecture
        where lecture_no not in (select lecture_no from ds_class_list where user_no=#{user_no}) and
		]]>

		<include refid="criteria"></include>
  
		<![CDATA[
		rownum<= #{pageNum} * #{amount}) l,
		ds_class_list c, ds_auth a, ds_user u 
		where l.lecture_no=c.lecture_no and
		c.user_no=a.user_no and a.user_auth='ROLE_TEACHER' and a.user_no=u.user_no
        and rn>(#{pageNum}-1)*#{amount}
		order by lecture_no
		]]>
	</select>


	<select id="lectureInfo" resultType="com.ds.domain.LectureVO">
		select lecture_no, lecture_name, lecture_description, lecture_afreecaid from
		ds_lecture
		where lecture_no=#{lecture_no}
	</select>


	<select id="getTotalCount" resultType="int">
	    <![CDATA[
	    select count(*) from ds_lecture where
	    ]]>
			<include refid="criteria"></include>
	    <![CDATA[
	    lecture_no>0 and lecture_no not in (select lecture_no from ds_class_list where user_no=#{user_no})
	    ]]>
	</select>

	<insert id="applyClass">
		insert into ds_class_list (lecture_no, user_no, class_status)
		VALUES (#{lecture_no}, #{user_no}, 'false')
	</insert>
	
	
	<select id="applyDuplicated" resultType="int">
	SELECT count(*) FROM ds_class_list 
	WHERE user_no=#{user_no} and lecture_no=#{lecture_no}
	</select>

	<select id="user_read" resultType="com.ds.domain.UserVO">
		select * from ds_user where user_id = #{user_id} 
	</select>
	
	<update id="user_update">
		update ds_user set user_email = #{user_email}, user_mobile = #{user_mobile}, user_depart = #{user_depart}, user_pw = #{user_pw}
		where user_id = #{user_id}
	</update>
	
	<delete id="user_delete">
		delete ds_user where user_no = #{user_no}		
	</delete>	
	
	<select id="qa_list" resultType="com.ds.domain.QuestionsVO">
		SELECT Q.QA_NO, Q.QA_WRITER, Q.QA_TITLE, Q.QA_DATE
		FROM DS_QA Q
		LEFT OUTER JOIN DS_USER U
		ON q.qa_writer = u.user_id
		WHERE USER_NO = #{USER_NO}
	</select>
	
</mapper>
