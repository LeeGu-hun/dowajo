<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.com//DTD Mapper 3.0//EN"
  "http://mybatis.com/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ds.mapper.TeacherMapper">

	<!-- <resultMap type="com.ds.domain.TeacherVO" id="teacherMap"> <id property="teacher_no" 
		column="tc_no" /> <result property="teacher_no" column="tc_no" /> <result 
		property="teacher_name" column="tc_name" /> <result property="teacher_lecture" 
		column="tc_lecture" /> <result property="teacher_mobile" column="tc_mobile" 
		/> <result property="teacher_email" column="tc_email" /> </resultMap> -->



	<insert id="registlecture">
		insert into ds_lecture (lecture_no, lecture_name, lecture_description, lecture_afreecaid) values (ds_lecture_seq.nextval, #{lecture_name},
		 #{lecture_description}, #{lecture_afreecaid})
		 <selectKey resultType="long" keyProperty="lecture_no" order="AFTER">
			SELECT ds_lecture_seq.currval from dual
		</selectKey>
	</insert>
	
	<insert id="register_class_list">
		insert into ds_class_list (lecture_no, user_no, class_status) values (#{lecture.lecture_no}, #{user_no}, 'true')
	</insert>

	<update id="update">
		update sale_customers set id=#{id}, user_name = #{user_name}
		where teacher_no = #{teacher_no}
	</update>
	<delete id="delete">
		delete sale_customers where teacher_no =
		#{teacher_no}
	</delete>
	<select id="getList" resultType="com.ds.domain.TeacherVO">
		select DISTINCT l.lecture_no,l.lecture_name,l.lecture_description 
		from ds_class_list c
		left OUTER JOIN ds_lecture l on c.lecture_no = l.lecture_no
		left OUTER JOIN ds_auth a on c.user_no = a.user_no
		where c.user_no=2 and a.user_auth=	'ROLE_TEACHER' order by l.lecture_no
	</select>
	<select id="regetlist_canecl" resultType="com.ds.domain.TeacherVO">
		select u.user_no,u.user_name,u.user_mobile,l.class_status
		from ds_user u
		left outer join ds_class_list l on u.user_no = l.user_no
		left outer join ds_auth a on u.user_no = a.user_no
		left outer join ds_lecture d on l.lecture_no = d.lecture_no
		where l.class_status='false' and a.user_auth = 'ROLE_STUDENT' and
		d.lecture_no = #{lecture_no}
	</select>
		<select id="regetlist_sign_up" resultType="com.ds.domain.TeacherVO">
		select u.user_no,u.user_name,u.user_mobile,l.class_status
		from ds_user u
		left outer join ds_class_list l on u.user_no = l.user_no
		left outer join ds_auth a on u.user_no = a.user_no
		left outer join ds_lecture d on l.lecture_no = d.lecture_no
		where l.class_status='true' and a.user_auth = 'ROLE_STUDENT' and
		d.lecture_no = #{lecture_no}
	</select>
	
	<select id="call_no" resultType="com.ds.domain.TeacherVO">
		select lecture_no from ds_lecture where lecture_no=#{lecture_no}
	</select>
	<select id="read_cancel" resultType="com.ds.domain.TeacherVO">
		select u.user_no,u.user_name,u.user_mobile,l.class_status
		from ds_user u
		left outer join ds_class_list l on u.user_no = l.user_no
		left outer join ds_auth a on u.user_no = a.user_no
		left outer join ds_lecture d on l.lecture_no = d.lecture_no
		where l.class_status='true' and a.user_auth = 'ROLE_STUDENT' and
		d.lecture_no = #{lecture_no}
	</select>
	<update id="read_refresh" parameterType="com.ds.domain.SignupVO">
		<foreach collection="checkArr" item="item" separator=";" open="DECLARE BEGIN" close="; END;">
            update ds_class_list set class_status='true' where lecture_no=#{lecture_no} and user_no=#{item}
        </foreach>
	</update>
	<update id="cancelrefresh" parameterType="com.ds.domain.SignupVO">
		<foreach collection="checkArr" item="item" separator=";" open="DECLARE BEGIN" close="; END;">
            update ds_class_list set class_status='false' where lecture_no=#{lecture_no} and user_no=#{item}
        </foreach>
	</update>
	<select id="read_sign_up" resultType="com.ds.domain.TeacherVO">
		select u.user_no,u.user_name,u.user_mobile,l.lecture_no,l.class_status
		from ds_user u
		left outer join ds_class_list l on u.user_no = l.user_no
		left outer join ds_auth a on u.user_no = a.user_no
		left outer join ds_lecture d on l.lecture_no = d.lecture_no
		where l.class_status='false' and a.user_auth = 'ROLE_STUDENT' and
		d.lecture_no = #{lecture_no}
	</select>



	<select id="getUserTypeList" resultType="com.ds.domain.TeacherVO">
			<![CDATA[
			select user_no, user_name,user_mobile
			from (select u.user_no, u.user_name,u.user_mobile from ds_user u, ds_auth a 
			where a.user_no=u.user_no and a.user_auth = #{user_auth} 
			]]>
	
			<include refid="criteria"></include>
	  <![CDATA[
		rownum<= #{pageNum} * #{amount})
		where rn>(#{pageNum}-1)*#{amount}
		and lecture_no not in (select lecture_no from ds_class_list where user_no=#{user_no})
		order by lecture_no
		]]>
			
	</select>
	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							user_name like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'N'.toString()">
							user_no like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>

	<select id="getListWithPaging"
		resultType="com.ds.domain.TeacherVO"> 
      <![CDATA[ 
      select teacher_no,cust_first_name,cust_last_name,cust_street_address1,cust_street_address2,
      cust_city,cust_state,cust_postal_code,phone_number1,phone_number2,
      credit_limit,cust_email
      from ( 
         select rownum rn,
         	teacher_no,cust_first_name,cust_last_name,cust_street_address1,cust_street_address2,
      cust_city,cust_state,cust_postal_code,phone_number1,phone_number2,
      credit_limit,cust_email
         from sale_customers
         where
      ]]>

		<include refid="criteria"></include>      
         
      <![CDATA[ 
         rownum <= #{pageNum} * #{amount} 
      ) where rn > (#{pageNum} -1) * #{amount} 
      ]]>
	</select>
	<select id="getTotalCount" resultType="int">
      <![CDATA[ 
      select count(*) from sale_customers where 
      ]]>
		<include refid="criteria"></include>
      <![CDATA[ 
      teacher_no > 0
      ]]>
	</select>

	<select id="user_read" resultType="com.ds.domain.UserVO">
		select * from ds_user where user_id = #{user_id} 
	</select>
	
	<update id="user_update">
		update ds_user set user_email = #{user_email}, user_mobile = #{user_mobile}, user_depart = #{user_depart}, user_pw = #{user_pw}
		where user_id = #{user_id}
	</update>
	
	<delete id="user_delete">
		delete ds_user where user_no = #{user_no}		
	</delete>
</mapper>
